#!/usr/bin/perl
use strict;
use warnings;

my $type='now';
my $title='Values at the moment of plugin execution.';
my $command;

if ( defined $ARGV[0] && $ARGV[0] eq '-now' ){
	$command = 'mpstat -P ALL 1 1|';
}
else{
	$type = 'avg';
	$title='Average values since uptime.';

	$command = 'mpstat -P ALL|';
}

open FH,$command;
my @output=<FH>;
close FH;


if ( $type eq 'now' ){
	foreach (@output){
		if ( $_ =~ /^Average:\s*(.*?)\ +(.*?)\ +(.*?)\ +(.*?)\ +(.*?)\ +(.*?)\ +(.*?)\ +(.*?)\ +(.*?)\ +(.*)/ ){
			my ($cpu,$usr,$nice,$sys,$iowait,$irq,$soft,$steal,$guest,$idle) = ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10);
			if ( $cpu =~ /all|\d+/){
				printf "%s_usr:%s\n",$cpu,$usr;
				printf "%s_nice:%s\n",$cpu,$nice;
				printf "%s_sys:%s\n",$cpu,$sys;
				printf "%s_iowait:%s\n",$cpu,$iowait;
				printf "%s_irq:%s\n",$cpu,$irq;
				printf "%s_soft:%s\n",$cpu,$soft;
				printf "%s_steal:%s\n",$cpu,$steal;
				printf "%s_guest:%s\n",$cpu,$guest;
				printf "%s_idle:%s\n",$cpu,$idle;
			}
		}
	}
}
else{
	foreach (@output){
		if ( $_ =~ /(.*?)\ +(.*?)\ +(.*?)\ +(.*?)\ +(.*?)\ +(.*?)\ +(.*?)\ +(.*?)\ +(.*?)\ +(.*?)\ +(.*?)\ +(.*)/ ){
			my ($cpu,$usr,$nice,$sys,$iowait,$irq,$soft,$steal,$guest,$idle) = ($3,$4,$5,$6,$7,$8,$9,$10,$11,$12);
			if ( $cpu =~ /all|\d+/){
				printf "%s_usr:%s\n",$cpu,$usr;
				printf "%s_nice:%s\n",$cpu,$nice;
				printf "%s_sys:%s\n",$cpu,$sys;
				printf "%s_iowait:%s\n",$cpu,$iowait;
				printf "%s_irq:%s\n",$cpu,$irq;
				printf "%s_soft:%s\n",$cpu,$soft;
				printf "%s_steal:%s\n",$cpu,$steal;
				printf "%s_guest:%s\n",$cpu,$guest;
				printf "%s_idle:%s\n",$cpu,$idle;
			}
		}
	}

}

print "~==.==~\n";
print $title,"\n\n";
print @output,"\n";
print "Source: $0\n";
