#!/usr/bin/perl
use strict;
use warnings;
my @results;

my $ip=shift;
my $count=shift;
my $timeout=shift;

if ( (not defined $ip) || (not defined $count) || (not defined $timeout) ){
	print "Missing ip, count or timeout.\nExample:\n\tping.pl 10.9.8.1 4 100\n";
	exit 0
}

my $command = sprintf ( "ping -c %s -W %s %s 2> /dev/null|", $count,$timeout,$ip);

open PING,"$command";
@results = <PING>;
close PING;

#set default values
my %results= (
		'loss' => 'nan',
		'time' => 'nan',
		'min' => 'nan',
		'avg' => 'nan',
		'max' => 'nan',
		'mdev' => 'nan');
for (my $x=0;$x < $count; $x++) {
$results{'ping_'.$x}='nan'
};

foreach (@results){
	if ($_ =~ /.*?icmp_req=(\d*).*?time=(.*?)\ .*/){
		$results{'ping_'.$1}=$2;
		}

	elsif ($_ =~ /.*?(\d*)?%\ packet\ loss,\ time\ (.*)?ms/){
		$results{'loss'}=$1;
		$results{'time'}=$2;
	}
	elsif ($_ =~ /.*?\ =\ (.*)?\/(.*)?\/(.*)?\/(.*)?\ .*/){
		$results{'min'}=$1;
		$results{'avg'}=$2;
		$results{'max'}=$3;
		$results{'mdev'}=$4;
	}
}
for my $key ( sort keys %results){
	printf "%s:%s\n",$key,$results{$key};
}
print "~==.==~\n";
print join ("",@results);
print "\nMD5: $0\n";
